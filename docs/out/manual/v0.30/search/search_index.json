{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction pico-C\u00e9u is a tiny programming environment for visual and interactive applications such as video games. It is composed of the programming language C\u00e9u and minimalist libraries for input, graphics, network, and sound.","title":"Introduction"},{"location":"#introduction","text":"pico-C\u00e9u is a tiny programming environment for visual and interactive applications such as video games. It is composed of the programming language C\u00e9u and minimalist libraries for input, graphics, network, and sound.","title":"Introduction"},{"location":"license/","text":"License pico-C\u00e9u is distributed under the MIT license reproduced below: Copyright (C) 2012-2017 Francisco Sant'Anna Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"pico-C\u00e9u is distributed under the MIT license reproduced below: Copyright (C) 2012-2017 Francisco Sant'Anna Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"frames/","text":"Frame Management Manages the game frames, such as for updating animations and redrawing the screen. Configuration FRAMES_SET Enables or disables the generation of periodic FRAMES_UPDATE and FRAMES_REDRAW inputs to the application. output (yes/no) FRAMES_SET Parameters: yes/no : new state yes : enables the generation of frames no : disables the generation of frames Inputs FRAMES_UPDATE input (integer) FRAMES_UPDATE Occurrences: on every frame, before FRAMES_REDRAW Payload: integer : the number of milliseconds elapsed since the previous frame FRAMES_REDRAW input (none) FRAMES_REDRAW Occurrences: on every frame, after FRAMES_UPDATE Payload: none : no payload Before the input occurs, the screen is automatically cleared with WINDOW_CLEAR .","title":"Frame Management"},{"location":"frames/#frame-management","text":"Manages the game frames, such as for updating animations and redrawing the screen.","title":"Frame Management"},{"location":"frames/#configuration","text":"","title":"Configuration"},{"location":"frames/#frames_set","text":"Enables or disables the generation of periodic FRAMES_UPDATE and FRAMES_REDRAW inputs to the application. output (yes/no) FRAMES_SET Parameters: yes/no : new state yes : enables the generation of frames no : disables the generation of frames","title":"FRAMES_SET"},{"location":"frames/#inputs","text":"","title":"Inputs"},{"location":"frames/#frames_update","text":"input (integer) FRAMES_UPDATE Occurrences: on every frame, before FRAMES_REDRAW Payload: integer : the number of milliseconds elapsed since the previous frame","title":"FRAMES_UPDATE"},{"location":"frames/#frames_redraw","text":"input (none) FRAMES_REDRAW Occurrences: on every frame, after FRAMES_UPDATE Payload: none : no payload Before the input occurs, the screen is automatically cleared with WINDOW_CLEAR .","title":"FRAMES_REDRAW"},{"location":"graphics/","text":"Graphics Provides graphics operations, such as for drawing pixels and images on the screen. TODO: axis Configuration GRAPHICS_SET_ANCHOR Changes the drawing anchor of all subsequent drawing operations GRAPHICS_DRAW_BMP , GRAPHICS_DRAW_RECT , and GRAPHICS_DRAW_TEXT . output (HAnchor,VAnchor) GRAPHICS_SET_ANCHOR; Parameters: HAnchor : new horizontal anchor VAnchor : new vertical anchor The anchor specifies the part of the shape to appear at the pixel position of the drawing operation. The possible values for HAnchor are HANCHOR_LEFT , HANCHOR_CENTER , and HANCHOR_RIGHT . The initial value is HANCHOR_CENTER . The possible values for HVnchor are VANCHOR_TOP , VANCHOR_CENTER , and VANCHOR_BOTTOM . The initial value is VANCHOR_CENTER . GRAPHICS_SET_BMP_FRAME Changes the drawing frame of all subsequent GRAPHICS_DRAW_BMP operations. output (int?,int?) GRAPHICS_SET_BMP_FRAME; Parameters: int? : new frame index to show (default: 0 ) int? : new number of frames in the image (default: 1 ) The initial frame index is 0 and number of frames is 1 . GRAPHICS_SET_BMP_SIZE Changes the drawing size of all subsequent GRAPHICS_DRAW_BMP operations. output (int?,int?) GRAPHICS_SET_BMP_SIZE; Parameters: int? : new width (default: proportional to new height) int? : new height (default: proportional to new width) If both width and height are set to default, the new size is the original image size. The initial size is the original image size. GRAPHICS_SET_COLOR_NAME Changes the color of all subsequent drawing operations. output (Color) GRAPHICS_SET_COLOR_NAME Parameters: Color : new color name The color names are based on the HTML Web Colors : https://en.wikipedia.org/wiki/Web_colors#HTML_color_names The possible values are COLOR_WHITE , COLOR_SILVER , COLOR_GRAY , COLOR_BLACK , COLOR_RED , COLOR_MAROON , COLOR_YELLOW , COLOR_OLIVE , COLOR_LIME , COLOR_GREEN , COLOR_AQUA , COLOR_TEAL , COLOR_BLUE , COLOR_NAVY , COLOR_FUCHSIA , COLOR_PURPLE . The initial color is white. GRAPHICS_SET_COLOR_RGB Changes the color in RGB of all subsequent drawing operations. output (integer,integer,integer) GRAPHICS_SET_COLOR_RGB Parameters: integer : new red component integer : new green component integer : new blue component The initial color is white. GRAPHICS_SET_FONT Changes the font for drawing and writing text. output (text,integer) GRAPHICS_SET_FONT Parameters: text : path for the .ttf font filename integer : height of the new font in pixels GRAPHICS_SET_SCALE Changes the drawing scale of all subsequent drawing operations GRAPHICS_DRAW_BMP , GRAPHICS_DRAW_RECT , and GRAPHICS_DRAW_TEXT . output (real,real) GRAPHICS_SET_SCALE; Parameters: real : new horizontal scale real : new vertical scale The initial scale is 1.0 x 1.0 . GRAPHICS_SET_WRITE_CURSOR Changes the cursor starting position for writing text with GRAPHICS_WRITE and GRAPHICS_WRITELN . output (integer,integer) GRAPHICS_SET_WRITE_CURSOR Parameters: integer : new position in the x-axis integer : new position in the y-axis The initial starting position is the top-left of the screen. The current position is reset on every WINDOW_CLEAR operation. Drawing GRAPHICS_DRAW_BMP Draws a bitmap image on the screen. output (integer,integer,text) GRAPHICS_DRAW_BMP Parameters: integer : position in the x-axis integer : position in the y-axis text : path for the .bmp image filename GRAPHICS_DRAW_PIXEL Draws a pixel on the screen. output (integer,integer) GRAPHICS_DRAW_PIXEL Parameters: integer : position in the x-axis integer : position in the y-axis The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . GRAPHICS_DRAW_LINE Draws a line on the screen. output (integer,integer,integer,integer) GRAPHICS_DRAW_LINE; Parameters: integer : start position in the x-axis integer : start position in the y-axis integer : end position in the x-axis integer : end position in the y-axis The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . GRAPHICS_DRAW_RECT Draws a rectangle on the screen. output (integer,integer,integer,integer) GRAPHICS_DRAW_RECT Parameters: integer : position in the x-axis integer : position in the y-axis integer : rectangle width integer : rectangle height The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . GRAPHICS_DRAW_TEXT Draws a text on the screen. output (int,int,text) GRAPHICS_DRAW_TEXT; Parameters: integer : position in the x-axis integer : position in the y-axis text : text to draw The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . Writing GRAPHICS_WRITE Writes a text on the screen. output (text) GRAPHICS_WRITE; Parameters: text : text to draw The drawing position is first specified with GRAPHICS_SET_WRITE_CURSOR . The cursor advances automatically for the position after the text. The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . GRAPHICS_WRITELN Writes a line of text on the screen. output (text) GRAPHICS_WRITELN; The drawing position is first specified with GRAPHICS_SET_WRITE_CURSOR . The cursor advances automatically for the next line after the text, at the same initial position. The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB . Other GRAPHICS_SCREENSHOT Takes a screen shot. output (text) GRAPHICS_SCREENSHOT Parameters: text : path for the .bmp image filename to generate","title":"Graphics"},{"location":"graphics/#graphics","text":"Provides graphics operations, such as for drawing pixels and images on the screen. TODO: axis","title":"Graphics"},{"location":"graphics/#configuration","text":"","title":"Configuration"},{"location":"graphics/#graphics_set_anchor","text":"Changes the drawing anchor of all subsequent drawing operations GRAPHICS_DRAW_BMP , GRAPHICS_DRAW_RECT , and GRAPHICS_DRAW_TEXT . output (HAnchor,VAnchor) GRAPHICS_SET_ANCHOR; Parameters: HAnchor : new horizontal anchor VAnchor : new vertical anchor The anchor specifies the part of the shape to appear at the pixel position of the drawing operation. The possible values for HAnchor are HANCHOR_LEFT , HANCHOR_CENTER , and HANCHOR_RIGHT . The initial value is HANCHOR_CENTER . The possible values for HVnchor are VANCHOR_TOP , VANCHOR_CENTER , and VANCHOR_BOTTOM . The initial value is VANCHOR_CENTER .","title":"GRAPHICS_SET_ANCHOR"},{"location":"graphics/#graphics_set_bmp_frame","text":"Changes the drawing frame of all subsequent GRAPHICS_DRAW_BMP operations. output (int?,int?) GRAPHICS_SET_BMP_FRAME; Parameters: int? : new frame index to show (default: 0 ) int? : new number of frames in the image (default: 1 ) The initial frame index is 0 and number of frames is 1 .","title":"GRAPHICS_SET_BMP_FRAME"},{"location":"graphics/#graphics_set_bmp_size","text":"Changes the drawing size of all subsequent GRAPHICS_DRAW_BMP operations. output (int?,int?) GRAPHICS_SET_BMP_SIZE; Parameters: int? : new width (default: proportional to new height) int? : new height (default: proportional to new width) If both width and height are set to default, the new size is the original image size. The initial size is the original image size.","title":"GRAPHICS_SET_BMP_SIZE"},{"location":"graphics/#graphics_set_color_name","text":"Changes the color of all subsequent drawing operations. output (Color) GRAPHICS_SET_COLOR_NAME Parameters: Color : new color name The color names are based on the HTML Web Colors : https://en.wikipedia.org/wiki/Web_colors#HTML_color_names The possible values are COLOR_WHITE , COLOR_SILVER , COLOR_GRAY , COLOR_BLACK , COLOR_RED , COLOR_MAROON , COLOR_YELLOW , COLOR_OLIVE , COLOR_LIME , COLOR_GREEN , COLOR_AQUA , COLOR_TEAL , COLOR_BLUE , COLOR_NAVY , COLOR_FUCHSIA , COLOR_PURPLE . The initial color is white.","title":"GRAPHICS_SET_COLOR_NAME"},{"location":"graphics/#graphics_set_color_rgb","text":"Changes the color in RGB of all subsequent drawing operations. output (integer,integer,integer) GRAPHICS_SET_COLOR_RGB Parameters: integer : new red component integer : new green component integer : new blue component The initial color is white.","title":"GRAPHICS_SET_COLOR_RGB"},{"location":"graphics/#graphics_set_font","text":"Changes the font for drawing and writing text. output (text,integer) GRAPHICS_SET_FONT Parameters: text : path for the .ttf font filename integer : height of the new font in pixels","title":"GRAPHICS_SET_FONT"},{"location":"graphics/#graphics_set_scale","text":"Changes the drawing scale of all subsequent drawing operations GRAPHICS_DRAW_BMP , GRAPHICS_DRAW_RECT , and GRAPHICS_DRAW_TEXT . output (real,real) GRAPHICS_SET_SCALE; Parameters: real : new horizontal scale real : new vertical scale The initial scale is 1.0 x 1.0 .","title":"GRAPHICS_SET_SCALE"},{"location":"graphics/#graphics_set_write_cursor","text":"Changes the cursor starting position for writing text with GRAPHICS_WRITE and GRAPHICS_WRITELN . output (integer,integer) GRAPHICS_SET_WRITE_CURSOR Parameters: integer : new position in the x-axis integer : new position in the y-axis The initial starting position is the top-left of the screen. The current position is reset on every WINDOW_CLEAR operation.","title":"GRAPHICS_SET_WRITE_CURSOR"},{"location":"graphics/#drawing","text":"","title":"Drawing"},{"location":"graphics/#graphics_draw_bmp","text":"Draws a bitmap image on the screen. output (integer,integer,text) GRAPHICS_DRAW_BMP Parameters: integer : position in the x-axis integer : position in the y-axis text : path for the .bmp image filename","title":"GRAPHICS_DRAW_BMP"},{"location":"graphics/#graphics_draw_pixel","text":"Draws a pixel on the screen. output (integer,integer) GRAPHICS_DRAW_PIXEL Parameters: integer : position in the x-axis integer : position in the y-axis The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_DRAW_PIXEL"},{"location":"graphics/#graphics_draw_line","text":"Draws a line on the screen. output (integer,integer,integer,integer) GRAPHICS_DRAW_LINE; Parameters: integer : start position in the x-axis integer : start position in the y-axis integer : end position in the x-axis integer : end position in the y-axis The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_DRAW_LINE"},{"location":"graphics/#graphics_draw_rect","text":"Draws a rectangle on the screen. output (integer,integer,integer,integer) GRAPHICS_DRAW_RECT Parameters: integer : position in the x-axis integer : position in the y-axis integer : rectangle width integer : rectangle height The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_DRAW_RECT"},{"location":"graphics/#graphics_draw_text","text":"Draws a text on the screen. output (int,int,text) GRAPHICS_DRAW_TEXT; Parameters: integer : position in the x-axis integer : position in the y-axis text : text to draw The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_DRAW_TEXT"},{"location":"graphics/#writing","text":"","title":"Writing"},{"location":"graphics/#graphics_write","text":"Writes a text on the screen. output (text) GRAPHICS_WRITE; Parameters: text : text to draw The drawing position is first specified with GRAPHICS_SET_WRITE_CURSOR . The cursor advances automatically for the position after the text. The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_WRITE"},{"location":"graphics/#graphics_writeln","text":"Writes a line of text on the screen. output (text) GRAPHICS_WRITELN; The drawing position is first specified with GRAPHICS_SET_WRITE_CURSOR . The cursor advances automatically for the next line after the text, at the same initial position. The drawing font is specified with GRAPHICS_SET_FONT . The drawing color is specified with GRAPHICS_SET_COLOR_NAME or GRAPHICS_SET_COLOR_RGB .","title":"GRAPHICS_WRITELN"},{"location":"graphics/#other","text":"","title":"Other"},{"location":"graphics/#graphics_screenshot","text":"Takes a screen shot. output (text) GRAPHICS_SCREENSHOT Parameters: text : path for the .bmp image filename to generate","title":"GRAPHICS_SCREENSHOT"},{"location":"input/","text":"Input Devices Provides input handling, such as for keyboard and mouse. Keyboard KEY_PRESS input (integer) KEY_PRESS Occurrences: whenever a keyboard key is pressed Payload: integer : numeric key code TODO: key codes KEY_UNPRESS input (integer) KEY_UNPRESS Occurrences: whenever a keyboard key is released Payload: integer : numeric key code TODO: key codes Mouse MOUSE_CLICK input (integer,integer,integer) MOUSE_CLICK Occurrences: whenever a mouse button is pressed Payload: integer : numeric button code ( TODO: left, middle, right? ) integer : current mouse position in the x-axis integer : current mouse position in the y-axis MOUSE_UNCLICK input (integer,integer,integer) MOUSE_UNCLICK Occurrences: whenever a mouse button is released Payload: integer : numeric button code ( TODO: left, middle, right? ) integer : current mouse position in the x-axis integer : current mouse position in the y-axis MOUSE_MOVE input (integer,integer) MOUSE_MOVE Occurrences: whenever the mouse moves Payload: integer : current mouse position in the x-axis integer : current mouse position in the y-axis","title":"Input Devices"},{"location":"input/#input-devices","text":"Provides input handling, such as for keyboard and mouse.","title":"Input Devices"},{"location":"input/#keyboard","text":"","title":"Keyboard"},{"location":"input/#key_press","text":"input (integer) KEY_PRESS Occurrences: whenever a keyboard key is pressed Payload: integer : numeric key code TODO: key codes","title":"KEY_PRESS"},{"location":"input/#key_unpress","text":"input (integer) KEY_UNPRESS Occurrences: whenever a keyboard key is released Payload: integer : numeric key code TODO: key codes","title":"KEY_UNPRESS"},{"location":"input/#mouse","text":"","title":"Mouse"},{"location":"input/#mouse_click","text":"input (integer,integer,integer) MOUSE_CLICK Occurrences: whenever a mouse button is pressed Payload: integer : numeric button code ( TODO: left, middle, right? ) integer : current mouse position in the x-axis integer : current mouse position in the y-axis","title":"MOUSE_CLICK"},{"location":"input/#mouse_unclick","text":"input (integer,integer,integer) MOUSE_UNCLICK Occurrences: whenever a mouse button is released Payload: integer : numeric button code ( TODO: left, middle, right? ) integer : current mouse position in the x-axis integer : current mouse position in the y-axis","title":"MOUSE_UNCLICK"},{"location":"input/#mouse_move","text":"input (integer,integer) MOUSE_MOVE Occurrences: whenever the mouse moves Payload: integer : current mouse position in the x-axis integer : current mouse position in the y-axis","title":"MOUSE_MOVE"},{"location":"net/","text":"Network Provides unreliable broadcast communication between peers. Send NET_SEND Broadcasts a message to all peers. output (integer,byte ) NET_SEND; Parameters: integer : number of bytes to transmit byte : stream of bytes Receive NET_RECEIVE Receives all messages from all peers, including itself. input (integer,byte ) NET_RECEIVE; Occurrences: on every received message Payload: integer : number of received bytes byte : stream of bytes","title":"Network"},{"location":"net/#network","text":"Provides unreliable broadcast communication between peers.","title":"Network"},{"location":"net/#send","text":"","title":"Send"},{"location":"net/#net_send","text":"Broadcasts a message to all peers. output (integer,byte ) NET_SEND; Parameters: integer : number of bytes to transmit byte : stream of bytes","title":"NET_SEND"},{"location":"net/#receive","text":"","title":"Receive"},{"location":"net/#net_receive","text":"Receives all messages from all peers, including itself. input (integer,byte ) NET_RECEIVE; Occurrences: on every received message Payload: integer : number of received bytes byte : stream of bytes","title":"NET_RECEIVE"},{"location":"sound/","text":"Sound Provides sound playback. Configuration SOUND_SET_VOLUME Changes the volume of all subsequent sound playbacks. output (integer) SOUND_SET_VOUME Parameters: integer : new sound volume in percentage (from 0 to 100 ) Playback SOUND_PLAY Plays a sound file. output (text) SOUND_PLAY Parameters: text : path for the sound filename The playback volume is specified with SOUND_SET_VOLUME .","title":"Sound"},{"location":"sound/#sound","text":"Provides sound playback.","title":"Sound"},{"location":"sound/#configuration","text":"","title":"Configuration"},{"location":"sound/#sound_set_volume","text":"Changes the volume of all subsequent sound playbacks. output (integer) SOUND_SET_VOUME Parameters: integer : new sound volume in percentage (from 0 to 100 )","title":"SOUND_SET_VOLUME"},{"location":"sound/#playback","text":"","title":"Playback"},{"location":"sound/#sound_play","text":"Plays a sound file. output (text) SOUND_PLAY Parameters: text : path for the sound filename The playback volume is specified with SOUND_SET_VOLUME .","title":"SOUND_PLAY"},{"location":"window/","text":"Window Management Manages the application window. Configuration WINDOW_SET_CLEAR_COLOR_NAME Changes the background color of WINDOW_CLEAR . output (Color) WINDOW_SET_CLEAR_COLOR_NAME Parameters: Color : new color name The color names are based on the HTML Web Colors : https://en.wikipedia.org/wiki/Web_colors#HTML_color_names The possible values are COLOR_WHITE , COLOR_SILVER , COLOR_GRAY , COLOR_BLACK , COLOR_RED , COLOR_MAROON , COLOR_YELLOW , COLOR_OLIVE , COLOR_LIME , COLOR_GREEN , COLOR_AQUA , COLOR_TEAL , COLOR_BLUE , COLOR_NAVY , COLOR_FUCHSIA , COLOR_PURPLE . The default color is black. WINDOW_SET_CLEAR_COLOR_RGB Changes the background color of WINDOW_CLEAR in RGB. output (integer,integer,integer) WINDOW_SET_CLEAR_COLOR_RGB Parameters: integer : new red component integer : new green component integer : new blue component The default color is black. WINDOW_SET_GRID Enables or disables a visual grid delimiting the screen pixels. output (yes/no) WINDOW_SET_GRID Parameters: yes/no : new state yes : enables the grid no : disables the grid The ratio between the real and logical dimensions set with WINDOW_SET_SIZE must be greater then one. The window is automatically cleared with WINDOW_CLEAR . WINDOW_SET_SIZE Changes the real and logical sizes of the window. output (integer,integer,integer,integer) WINDOW_SET_SIZE Parameters: integer : new real width integer : new real height integer : new logical width integer : new logical height The window is automatically cleared with WINDOW_CLEAR . The arithmetic division between the real and logical dimensions must be exact. WINDOW_SET_TITLE Changes the title of the window. output (text) WINDOW_SET_TITLE Parameters: text : new window title Clear WINDOW_CLEAR Clears the window screen. output (none) WINDOW_CLEAR Parameters: none : no parameters The clear color is specified with WINDOW_SET_CLEAR_COLOR_NAME or WINDOW_SET_CLEAR_COLOR_RGB . The default color is black.","title":"Window Management"},{"location":"window/#window-management","text":"Manages the application window.","title":"Window Management"},{"location":"window/#configuration","text":"","title":"Configuration"},{"location":"window/#window_set_clear_color_name","text":"Changes the background color of WINDOW_CLEAR . output (Color) WINDOW_SET_CLEAR_COLOR_NAME Parameters: Color : new color name The color names are based on the HTML Web Colors : https://en.wikipedia.org/wiki/Web_colors#HTML_color_names The possible values are COLOR_WHITE , COLOR_SILVER , COLOR_GRAY , COLOR_BLACK , COLOR_RED , COLOR_MAROON , COLOR_YELLOW , COLOR_OLIVE , COLOR_LIME , COLOR_GREEN , COLOR_AQUA , COLOR_TEAL , COLOR_BLUE , COLOR_NAVY , COLOR_FUCHSIA , COLOR_PURPLE . The default color is black.","title":"WINDOW_SET_CLEAR_COLOR_NAME"},{"location":"window/#window_set_clear_color_rgb","text":"Changes the background color of WINDOW_CLEAR in RGB. output (integer,integer,integer) WINDOW_SET_CLEAR_COLOR_RGB Parameters: integer : new red component integer : new green component integer : new blue component The default color is black.","title":"WINDOW_SET_CLEAR_COLOR_RGB"},{"location":"window/#window_set_grid","text":"Enables or disables a visual grid delimiting the screen pixels. output (yes/no) WINDOW_SET_GRID Parameters: yes/no : new state yes : enables the grid no : disables the grid The ratio between the real and logical dimensions set with WINDOW_SET_SIZE must be greater then one. The window is automatically cleared with WINDOW_CLEAR .","title":"WINDOW_SET_GRID"},{"location":"window/#window_set_size","text":"Changes the real and logical sizes of the window. output (integer,integer,integer,integer) WINDOW_SET_SIZE Parameters: integer : new real width integer : new real height integer : new logical width integer : new logical height The window is automatically cleared with WINDOW_CLEAR . The arithmetic division between the real and logical dimensions must be exact.","title":"WINDOW_SET_SIZE"},{"location":"window/#window_set_title","text":"Changes the title of the window. output (text) WINDOW_SET_TITLE Parameters: text : new window title","title":"WINDOW_SET_TITLE"},{"location":"window/#clear","text":"","title":"Clear"},{"location":"window/#window_clear","text":"Clears the window screen. output (none) WINDOW_CLEAR Parameters: none : no parameters The clear color is specified with WINDOW_SET_CLEAR_COLOR_NAME or WINDOW_SET_CLEAR_COLOR_RGB . The default color is black.","title":"WINDOW_CLEAR"}]}